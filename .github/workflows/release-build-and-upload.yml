name: En un release, compilar y subir el APK

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Produccion
    steps:
    - name: Checkout del codigo
      uses: actions/checkout@v4

    - name: Setup de JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache de packages de Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Damos permisos al gradlew
      run: chmod +x gradlew

    - name: Decodificamos keystore
      run: |
        if [ ! -z "$KEYSTORE" ]; then
          echo "$KEYSTORE" | base64 --decode > keystore.jks
          echo "Keystore decodificada"
        else
          echo "ERROR: No se encontro keystore en variable de entorno!"
          exit 1
        fi
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}

    - name: Compilamos debug APK
      run: ./gradlew assembleDebug

    - name: Subimos APK debug al Github release
      run: |
        cp ./app/build/outputs/apk/debug/app-debug.apk ./DonadorAutomatico-debug-${{ github.event.release.tag_name }}.apk
        gh release upload ${{ github.event.release.tag_name }} \
          ./DonadorAutomatico-debug-${{ github.event.release.tag_name }}.apk \
          --clobber \
          --repo ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event.release.tag_name != null

    - name: Compilamos release APK
      run: ./gradlew assembleRelease
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        # PKCS12 stores don't allow different passwords
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

    - name: Subimos APK de release al Github release
      run: |
        cp ./app/build/outputs/apk/release/app-release.apk ./DonadorAutomatico-${{ github.event.release.tag_name }}.apk
        gh release upload ${{ github.event.release.tag_name }} \
          ./DonadorAutomatico-${{ github.event.release.tag_name }}.apk \
          --clobber \
          --repo ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event.release.tag_name != null
